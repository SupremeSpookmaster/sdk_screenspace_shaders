screenspace_general
{
	// Shader to use
	// NOTE: Use '_ps20' suffix only (the engine corrects it to 'ps20b')
	$pixshader "velocity_based_color_ps20"

	// Textures to use
	// Use _rt_FullFrameFB to fetch the screen texture (framebuffer)
	$basetexture "_rt_FullFrameFB"
	$texture1    ""
	$texture2    ""
	$texture3    ""

	// Mandatory parameters, do not change these
	$x360appchooser 1
	$ignorez        1
	$fix_fb         32768
	"<dx90"
	{
		$no_draw 1
	}
	
	// Various color/alpha mixing parameters
	// usually you don't need to change these
	$copyalpha                 1
	$alpha_blend_color_overlay 0
	$alpha_blend               0
	$linearwrite               0
	$linearread_basetexture    0
	$linearread_texture1       0
	$linearread_texture2       0
	$linearread_texture3       0

	// 16 customizable parameters that are passed to the shader
	$c0_x     1.0	  //Max amount to restore RGB values based on movement speed, relative to target speed
	$c0_y	  0.0
	$c0_z	  0.0
	$c0_w	  0.0
	$c1_x     400.0   //Speed at which brightness maxes out
	$c1_y	  0.5	  //Base RGB value multiplier
	$c1_z	  0.5	  //Fade speed multiplier
	
	$vel     "[0 0 0]"
	$zero     0.0

	Proxies
	{
		// Updates the framebuffer
		// You only need this if you are going to be *reading* the framebuffer
		// If you aren't using the framebuffer, or are only fetching its dimensions,
		// you DON'T need this and it will save you some performance
		Equals
		{
			srcVar1			$fix_fb
			resultVar		$flags2
		}
		PlayerSpeed
		{
			scale			 1
			resultVar		"$vel"
		}
		// split into X Y Z components
		Clamp
		{
			srcVar1			 $zero
			min				"$vel[0]"
			max				"$vel[0]"
			resultVar		 $c0_y
		}
		Clamp
		{
			srcVar1			 $zero
			min				"$vel[1]"
			max				"$vel[1]"
			resultVar		 $c0_z
		}	
		Clamp
		{
			srcVar1			 $zero
			min				"$vel[2]"
			max				"$vel[2]"
			resultVar		 $c0_w
		}
	}
}
